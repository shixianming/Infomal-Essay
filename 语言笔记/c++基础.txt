c++基础知识
1.基本知识
1）常用的一些语法：cin--输入
		         cout--输出
				 using namespeace std--命名空间，加入以后输入输出函数可以不加std：：，也可用于多个空间的相同变量时
				 输入输出函数可以找到对应空间进行操作，using提供空间声明
				 type& name--a.改变变量名的名字，这是变量的别名的新别名，并没有分配空间，只是换了一个名字，还是同一片空间
						     b.引用的本质就是经过c++编译器处理的常指针
				             c.引用能建立关联，修改原空间的值
				 默认参数--a.单个默认参数:书写函数时给定一个默认参数，调用函数时不需要传递值
						  b.多个默认参数：多个默认参数的赋值是从右向左的，当函数给定两个参数时，调用函数需要至少传递一个值
						  当函数给定一个参数时，需要至少传递两个参数
				 占位参数--占位参数在函数中不参与运算，但是在调用函数时还是需要传递值
2）注意事项：三目运算--在c++中三目运算返回的是一个表达式	，可以赋值
		    const--在c++中const的只读性增强，注意const的使用位置，同时能用const修饰的尽量使用。
			函数--在c++中函数的格式要求更严格，必须包含返回值的类型
			static--可以将变量提升到全局区（静态区，用于解决局部变量空间释放以后重用问题）
			函数的返回值--a.返回值类型为基本数据类型时，返回的是一个值
						 b.返回值类型为指针类型时，返回的是一个空间地址
						 c.返回值类型为引用类型时，返回的是一个空间
3）函数的重载：函数名相同，参数不同（个数、类型、顺序）构成函数重载。函数的返回值类型和返回值不同不能构成函数重载

2.面向对象
1）类:拥有同一类属性的行为，类是对象的一种抽象--a.功能可通过类外实现，也可通过类内实现
											b.属性
2）对象：具有该行为的实例化，每一个对象应具有属性和功能，对象是类的实例化--a.属性在初始化时可在类内通过函数实现初始化，也可在内外初始化，通过传递引用或者指针
																b.功能
3）封装：数据对内，功能（结构KPI）对外
4）类的分离：类的声明--（.h）文件，在头文件右键，添加类
			类的成员函数实现--（.cpp）文件，在类创建以后会自动生成
			功能测试--在主函数中进行功能测试
			#pragma once--避免串包
5）构造函数：用于给一个对象初始化--a.在对象创建时，会自动调用（程序员无需手动调用构造函数），由编译器自动为对象完成初始化
								b.构造函数分为有参构造和无参构造，且构造函数没有返回值类型，连void都没有
								c.与类名必须相同（默认无参，默认重载，可默认参数）
								d.旦实现构造函数，系统就没有构造，当程序员手动书写一个构造函数时，必须手动将无参构造进行书写（避免出错）
								e.先创建的对象先构造
6）析构函数： c++编译器负责清理对象的一种特殊操作--a.格式为（~+类型名）和构造函数一样，没有返回值类型，也没有参数
											   b.其作用不是删除对象，而是对象在销毁之前的一系列清理工作
											   c.存在一个默认的析构函数
											   d.在对象销毁时自动调用
											   e.先创建的对象后析构，后创建的对象先析构
7）拷贝函数：用已存在的对象去初始化新的对象--a.格式为类名（const 类名& obj）
										 b.深拷贝--对象属性中有指向堆中的数据时，将堆中保存的数据同样拷贝一份
										 c.浅拷贝--单纯的赋值保存在栈中对象的数据
注：当在堆中开辟空间时需要进行深拷贝，因为浅拷贝只是单纯的保存在栈中对象的数据，如果没有深拷贝，在对象被析构时，原对象堆中的空间会被释放，导致指针断裂
使用深拷贝将原对象堆中的空间拷贝一份，作为新对象在堆中的空间，这样新对象被释放时不会牵连到原对象在堆中的空间
8）动态内存分配：c++中的动态内存分配使用new和delete，和c语言中的动态内存分配的区别是--a.c语言动态内存分配使用的是malloc函数和free函数，c++中动态
																				内存分配使用的是关键字new和delete
																				b.c语言中malloc创建对象是纯粹的用指针去指向堆中的空间，同时free
																				只是清空了对象的数据，并没有释放堆中对应空间的使用权
																				c.new是创建新的对象，delete是释放堆中的空间，同时调用析构函数																			清理对象，释放使用权
																				d.new和delete的运算效率高于malloc和free
9）静态修饰词：static--a.通过static修饰的成员属性是静态成员属性，静态成员属性需要在全局声明并初始化，此时静态成员属性不属于对象属于类，存储在全局区
					  会先加载至内存中
10）友元：有友元函数和友元类，关键词为friend，通过友元关系可以访问类的私有属性并修改，友元虽然提高了代码的访问速度，但是破坏了封装性
11）运算符重载：关键词operator，可重载运算符，不是所有的运算符都能重载
12）继承：子类继承父类就继承了父类的属性和方法--a.子类对象可以当作父类对象使用（也就是创建的子类对象可以访问父类的属性和方法）
										   b.子类对象可以直接赋值给父类对象
										   c.子类对象可以初始化父类对象
										   d.父类对象的指针和引用直接指向子类对象，由于父类的对象不具有子类的属性和方法，所以不能访问子类
										   e.父类不可以直接访问子类
13）抽象类和接口的却别：接口--表示对外提供的方法，提供给外部调用，是沟通外部跟内部的桥梁，也是以类的形式提供的，但一般只具有成员函数，不具有数据成员
					  抽象类--即可以包含数据成员又包含方法
标记:（类的分离，构造函数，析构函数，拷贝函数--The_High04；深浅拷贝，动态内存分配，自定义数组--The_High05；静态修饰词，友元函数，运算符重载--The_High06）
（继承--The_High08)
注：面向对象的三大特性：封装、继承、多态


练习1：自定义数组（The_High05）--方法:a.无参构造
	                                b.有参构造--自定义数组长度进行合理性判断
							        c.拷贝构造--在堆中开辟空间时，使用深拷贝
							        d.给数组对象赋值--自定义数字元素给定
							        e.获取数组值--返回自定义数组元素
							        f.获取数组长度--返回自定义数组长度
							        g.析构--释放空间
								属性：a.数组首元素的地址
		   						     .数组长度
练习2：自定义字符串（Week01）--方法：
							 属性：