简介
1.编程语言
    a.基于OpenGL的OpenGL Shading Language(GLSL)
    b.基于DirectX的High Level Shading Language(HLSL)
    c.基于NVIDIA的C for Graphic(CG)
注：GLSL于HLSL分别是基于不同的接口不能混用,而CG是Microsoft于NVIDIA合作在标准硬件光照语言和语义上达成了一致
所以HLSL和CG其实是同一种语言
2.UnityShader
    a.是Unity自身封装后的一种便于书写的Shader,又称为ShaderLab
    b.有三种同的写法(表面着色器--SurfaceShader 顶点/片段着色器--Vertex/Fragment Shader 固定管线着色器--Fixed Function Shader)
3.UnityShader的代码组成
    a.Shader--表示Shader的路径和名称，在代码组成中必须存在("Hidden"表示在材质面板中不显示此Shader,无法在下拉列表中找到)
    b.Properties--表示Shader的属性，在材质面板中的一下参数都是在这里定义的,在代码组成中可以没有
    c.SubShaders--在代码组成中至少要有一个
    d.FallBack--备用Shader，当我们自定的Shader在一下设备上不支持时就会自动切换成FallBack里的Shader，如果还是不支持那就继续从FallBack内的
    Shader中再找FallBack，在代码组成中可以没有
    e.CustomEditor--自定义界面，它可以改写在Properties中定义的显示方式，在代码组成中可以没有
3.Properties
    a.通用的格式--[Attribute]_Name("Display Name", Type) = Default Value
    b.命名规范--变量名前面一定要加上下划线，否则编译会报错
    c.常用类型--(1)Color(颜色--Color)：颜色属性是个四维分量，依次为RGBA对应(红,绿,蓝,透明),RGB的取值在Shader中被归一化为0~1之间
               (2)Int(整型--Int)：整型的变量可以在Inspector面板中输入浮点数但是会被识别为整数，而且是直接取整数部分
               (3)Float(浮点数--Float)：是Shader中最基本的类型，Int只是一种伪整型，完全可以用Float来代替
               (4)Vector(四维向量--Vector)：由四个Float值组成，分别对应XYZW
               (5)2D(2D纹理--2D)：纹理贴图，也是Shader中最常用的属性之一，其默认值有四种(white--纯白；balck--纯黑；gray--纯灰；bump--法线贴图)
               (6)3D(3D纹理--3D)：主要用在查找表或者体积数据上，默认值只会显示灰色图
               (7)Cube(立方体纹理--CUBE)：由6个独立的正方形纹理组成的集合，它将多个纹理组合起来映射到一个单一纹理，通常被用来作为具有反射属性物体的反射源
    d.一些常用的属性标记--(1)Rane(Range(Min, Max))：将浮点数限制在一个可以通过滑动条来选择的区间
                        (2)PowerSlider([PowerSlider(Value)])：Value值可以自定义，支持浮点数，值越大滑动条的曲度变化越大，值为1时不会改变，适用于需要微调的属性
                        (3)IntRange([IntRange])：加上以后Range在Inspector面板就只能生成整数了，而且是向下取整
                        (4)Toggle([Toggle])：加上以后Range(0, 1)就表示一个开关的属性了
                        (5)Enum([Enum(UnityEngine.Rendering.CullMode)])：枚举
                        (6)NoScaleOffset([NoScaleOffset])：加上以后会隐藏贴图的Tiling(贴图重复度)和Offset(贴图偏移值)这两个属性
                        (7)Normal([Nrmal])：加上以后贴图会被指定为法线贴图
                        (8)HDR([HDR])：加上以后Inspector面板会显示HDR字样，它可以使颜色的亮度值超过1
                        (9)Header([Header("Tips")])：可以在Inspector面板显示对该属性的描述
                        (10)HideInspector([HideInspector])：在Inspector面板中隐藏该属性
    e.在CG/HLSL中与Properties类型的对应--(1)Float
    float：高精度类型(32位)，通常用于世界坐标下的位置，纹理UV，或涉及复杂函数的标量计算，如三角函数，幂运算等
    half：中精度类型(16位 [-60000, +60000])，通常用于本地坐标下的位置，方向向量，HDR颜色等
    fixed：低精度类型(11位 [-2, +2])，通常用于常规的颜色与贴图，以及低精度间的一些运算变量等
注：在PC平台不管声明half还是fixed，都会被当作float来处理。half与fixed仅在部分移动设备生效，常用的规则是，除了位置和坐标用float外其余都用half
因为大部分GPU只支持float和half
                                     --(2)Int
    interger：通常用于循环与数组索引
注：在Direct3D 9和OpenGL ES 2.0平台上整型可能会被直接用浮点数来处理，在Direct3D111，OpenGL ES 3等现代GPU上可以正确的以整型来处理
                                     --(3)纹理
    sampler2D_half：中精度2D纹理
    sampler2D_float：高精度2D纹理
    sampler3D_half：中精度3D纹理
    sampler3D_float：高精度3D纹理
    samplerCUBE_half：中精度立方体纹理
    samplerCUBE_float：高精度立方体纹理
对应关系：Int/Float/Range(float, half, fixed) Vector/Color(float4, half4, fixed4) 2D(sampler2D_half, sampler2D_float) 3D(sampler3D_half sampler3D_float)
Cube(samplerCUBE_half, samplerCUBE_float) 矩阵(float4x4, half4x4)等
4.Pass
    a.渲染的具体实现由(CGPROGRAM)开始，(ENDCG)结束
    b.根据要实现的Shader类型，定义对应的着色器--(1)#pragma是Unity内置的编译指令用的命令，我们可以用它来声明着色器(顶点--#pragma vertex vert；片断--#pragma fragment frag)
    c.顶点着色器与片断着色器的执行并不是1:1，如一个三角面片，只有三个顶点，顶点着色器需要执行三次，而片断着色器执行次数由最终的像素
    决定，所以我们尽量把计算放在顶点着色器中去执行

API
1.UnityCG.cginc中一些常用的函数
    //摄像机方向（视角方向）
    a.float3 WorldSpaceViewDir(floa4 v)：根据模型空间中的顶点坐标得到（世界空间）从这个点到摄像机的观察方向
    b.float3 UnityWorldSpaceViewDir(float4 v)：世界空间中的顶点坐标=》世界空间从这个点到摄像机的观察方向
    c.float3 ObjSpaceViewDir(float4 v)：模型空间中的顶点坐标=》模型空间从这个点到摄像机的观察方向
    //光源方向
    a.float3 WorldSpaceLightDir(float4 v)：模型空间中的顶点作坐标=》世界空间中从这个点到光源的方向
    b.float3 UnityWorldSpaceLightDir(float4 v)：世界空间中的顶点坐标=》世界空间中从这个点到光源的方向
    c.float3 ObjSpaceLightDir(float4 v)：模型空间中的顶点坐标=》模型空间中从这个点到光源的方向
    //方向转换
    a.float3 UnityObjectToWorldNormal(float3 norm)：把法线方向 模型空间=》世界空间中从这个点到光源的方向
    b.float3 UnityObjectToWorldDir(float3 dir)：把方向 模型空间=》世界空间中从这个点到光源的方向
    c.float3 UnityWorldToObjectDir(float3 dir)：把方向 世界空间=》模型空间
2.CG的内置函数
    a.mul(matrix a, matrix b)：返回矩阵a,b的积
2.语义和一些Unity内置的宏定义或变量
    //语义
    a.POSITION：顶点坐标
    b.SV_POSITION：裁剪空间下的坐标
    c.NORMAL：法线方向
    d.TEXCOORD0：第一套纹理坐标
    //宏定义或变量
    a.UNITY_MATRIX_MVP：用于将顶点/方向矢量从模型空间变换到裁剪空间的内置矩阵

拓展
1.书籍
    a.Unity Shader 入门精要（乐乐程序猿）
    b.Unity 3D ShaderLab开发实战详解（第二版）
    c.Unity 5.X Shaders and effects cookbook（中文版 Unity着色器和屏幕特效开发秘籍）
2.网站
    a.https://developer.download.nvidia.cn/CgTutorial/cg_tutorial_chapter01.html：CG语言官方文档
    b.www.shadertoy.com：别人写的一些特效
    c.https://blog.csdn.net/poem_qianmo?viewmode=contents：浅墨大佬的博客
    d.https://zh.numberempire.com/graphingcalculator.php：数学函数在线演示
    